'------------------------------------------------------------------------------
' <auto-generated>
'     此代码由工具生成。
'     运行时版本:4.0.30319.42000
'
'     对此文件的更改可能会导致不正确的行为，并且如果
'     重新生成代码，这些更改将会丢失。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
'
Namespace WebReference
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WebServiceFlightDynSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WebServiceFlightDyn
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetFlightDynOperationCompleted As System.Threading.SendOrPostCallback
        
        Private QueryFlightDynOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFlightViewDynOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFlightSecurityDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateSecurityDataTimeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateSecurityDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SignCheckedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private senderMessageBytopicOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetParaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ResetPasswordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCargoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCargoTotalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.FlightQuery.My.MySettings.Default.WindowsApplication3_WebReference_WebServiceFlightDyn
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetFlightDynCompleted As GetFlightDynCompletedEventHandler
        
        '''<remarks/>
        Public Event QueryFlightDynCompleted As QueryFlightDynCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFlightViewDynCompleted As GetFlightViewDynCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFlightSecurityDataCompleted As GetFlightSecurityDataCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateSecurityDataTimeCompleted As UpdateSecurityDataTimeCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateSecurityDataCompleted As UpdateSecurityDataCompletedEventHandler
        
        '''<remarks/>
        Public Event SignCheckedCompleted As SignCheckedCompletedEventHandler
        
        '''<remarks/>
        Public Event senderMessageBytopicCompleted As senderMessageBytopicCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserCompleted As GetUserCompletedEventHandler
        
        '''<remarks/>
        Public Event GetParaCompleted As GetParaCompletedEventHandler
        
        '''<remarks/>
        Public Event ResetPasswordCompleted As ResetPasswordCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCargoCompleted As GetCargoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCargoTotalCompleted As GetCargoTotalCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFlightDyn", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub GetFlightDyn(ByVal fDate As Date, ByVal fType As String)
            Me.Invoke("GetFlightDyn", New Object() {fDate, fType})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFlightDynAsync(ByVal fDate As Date, ByVal fType As String)
            Me.GetFlightDynAsync(fDate, fType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFlightDynAsync(ByVal fDate As Date, ByVal fType As String, ByVal userState As Object)
            If (Me.GetFlightDynOperationCompleted Is Nothing) Then
                Me.GetFlightDynOperationCompleted = AddressOf Me.OnGetFlightDynOperationCompleted
            End If
            Me.InvokeAsync("GetFlightDyn", New Object() {fDate, fType}, Me.GetFlightDynOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFlightDynOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFlightDynCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFlightDynCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/QueryFlightDyn", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub QueryFlightDyn(ByVal filter As String)
            Me.Invoke("QueryFlightDyn", New Object() {filter})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub QueryFlightDynAsync(ByVal filter As String)
            Me.QueryFlightDynAsync(filter, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub QueryFlightDynAsync(ByVal filter As String, ByVal userState As Object)
            If (Me.QueryFlightDynOperationCompleted Is Nothing) Then
                Me.QueryFlightDynOperationCompleted = AddressOf Me.OnQueryFlightDynOperationCompleted
            End If
            Me.InvokeAsync("QueryFlightDyn", New Object() {filter}, Me.QueryFlightDynOperationCompleted, userState)
        End Sub
        
        Private Sub OnQueryFlightDynOperationCompleted(ByVal arg As Object)
            If (Not (Me.QueryFlightDynCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent QueryFlightDynCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFlightViewDyn", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub GetFlightViewDyn(ByVal fDate As Date)
            Me.Invoke("GetFlightViewDyn", New Object() {fDate})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFlightViewDynAsync(ByVal fDate As Date)
            Me.GetFlightViewDynAsync(fDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFlightViewDynAsync(ByVal fDate As Date, ByVal userState As Object)
            If (Me.GetFlightViewDynOperationCompleted Is Nothing) Then
                Me.GetFlightViewDynOperationCompleted = AddressOf Me.OnGetFlightViewDynOperationCompleted
            End If
            Me.InvokeAsync("GetFlightViewDyn", New Object() {fDate}, Me.GetFlightViewDynOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFlightViewDynOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFlightViewDynCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFlightViewDynCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFlightSecurityData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub GetFlightSecurityData(ByVal flightAID As String)
            Me.Invoke("GetFlightSecurityData", New Object() {flightAID})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFlightSecurityDataAsync(ByVal flightAID As String)
            Me.GetFlightSecurityDataAsync(flightAID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFlightSecurityDataAsync(ByVal flightAID As String, ByVal userState As Object)
            If (Me.GetFlightSecurityDataOperationCompleted Is Nothing) Then
                Me.GetFlightSecurityDataOperationCompleted = AddressOf Me.OnGetFlightSecurityDataOperationCompleted
            End If
            Me.InvokeAsync("GetFlightSecurityData", New Object() {flightAID}, Me.GetFlightSecurityDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFlightSecurityDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFlightSecurityDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFlightSecurityDataCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSecurityDataTime", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateSecurityDataTime(ByVal AID As String, ByVal para As String, ByVal userID As String, ByVal flightAID As String)
            Me.Invoke("UpdateSecurityDataTime", New Object() {AID, para, userID, flightAID})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateSecurityDataTimeAsync(ByVal AID As String, ByVal para As String, ByVal userID As String, ByVal flightAID As String)
            Me.UpdateSecurityDataTimeAsync(AID, para, userID, flightAID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateSecurityDataTimeAsync(ByVal AID As String, ByVal para As String, ByVal userID As String, ByVal flightAID As String, ByVal userState As Object)
            If (Me.UpdateSecurityDataTimeOperationCompleted Is Nothing) Then
                Me.UpdateSecurityDataTimeOperationCompleted = AddressOf Me.OnUpdateSecurityDataTimeOperationCompleted
            End If
            Me.InvokeAsync("UpdateSecurityDataTime", New Object() {AID, para, userID, flightAID}, Me.UpdateSecurityDataTimeOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateSecurityDataTimeOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateSecurityDataTimeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateSecurityDataTimeCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSecurityData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdateSecurityData(ByVal AID As String, ByVal para As String, ByVal value As String, ByVal userID As String, ByVal flightAID As String)
            Me.Invoke("UpdateSecurityData", New Object() {AID, para, value, userID, flightAID})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateSecurityDataAsync(ByVal AID As String, ByVal para As String, ByVal value As String, ByVal userID As String, ByVal flightAID As String)
            Me.UpdateSecurityDataAsync(AID, para, value, userID, flightAID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateSecurityDataAsync(ByVal AID As String, ByVal para As String, ByVal value As String, ByVal userID As String, ByVal flightAID As String, ByVal userState As Object)
            If (Me.UpdateSecurityDataOperationCompleted Is Nothing) Then
                Me.UpdateSecurityDataOperationCompleted = AddressOf Me.OnUpdateSecurityDataOperationCompleted
            End If
            Me.InvokeAsync("UpdateSecurityData", New Object() {AID, para, value, userID, flightAID}, Me.UpdateSecurityDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateSecurityDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateSecurityDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateSecurityDataCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SignChecked", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SignChecked(ByVal userID As String, ByVal DepartmentID As String)
            Me.Invoke("SignChecked", New Object() {userID, DepartmentID})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SignCheckedAsync(ByVal userID As String, ByVal DepartmentID As String)
            Me.SignCheckedAsync(userID, DepartmentID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SignCheckedAsync(ByVal userID As String, ByVal DepartmentID As String, ByVal userState As Object)
            If (Me.SignCheckedOperationCompleted Is Nothing) Then
                Me.SignCheckedOperationCompleted = AddressOf Me.OnSignCheckedOperationCompleted
            End If
            Me.InvokeAsync("SignChecked", New Object() {userID, DepartmentID}, Me.SignCheckedOperationCompleted, userState)
        End Sub
        
        Private Sub OnSignCheckedOperationCompleted(ByVal arg As Object)
            If (Not (Me.SignCheckedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SignCheckedCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/senderMessageBytopic", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub senderMessageBytopic(ByVal payload As String, ByVal title As String, ByVal description As String, ByVal topic As String, ByVal type As Integer)
            Me.Invoke("senderMessageBytopic", New Object() {payload, title, description, topic, type})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub senderMessageBytopicAsync(ByVal payload As String, ByVal title As String, ByVal description As String, ByVal topic As String, ByVal type As Integer)
            Me.senderMessageBytopicAsync(payload, title, description, topic, type, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub senderMessageBytopicAsync(ByVal payload As String, ByVal title As String, ByVal description As String, ByVal topic As String, ByVal type As Integer, ByVal userState As Object)
            If (Me.senderMessageBytopicOperationCompleted Is Nothing) Then
                Me.senderMessageBytopicOperationCompleted = AddressOf Me.OnsenderMessageBytopicOperationCompleted
            End If
            Me.InvokeAsync("senderMessageBytopic", New Object() {payload, title, description, topic, type}, Me.senderMessageBytopicOperationCompleted, userState)
        End Sub
        
        Private Sub OnsenderMessageBytopicOperationCompleted(ByVal arg As Object)
            If (Not (Me.senderMessageBytopicCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent senderMessageBytopicCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub GetUser(ByVal userID As String, ByVal pwd As String)
            Me.Invoke("GetUser", New Object() {userID, pwd})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserAsync(ByVal userID As String, ByVal pwd As String)
            Me.GetUserAsync(userID, pwd, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserAsync(ByVal userID As String, ByVal pwd As String, ByVal userState As Object)
            If (Me.GetUserOperationCompleted Is Nothing) Then
                Me.GetUserOperationCompleted = AddressOf Me.OnGetUserOperationCompleted
            End If
            Me.InvokeAsync("GetUser", New Object() {userID, pwd}, Me.GetUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPara", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub GetPara()
            Me.Invoke("GetPara", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetParaAsync()
            Me.GetParaAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetParaAsync(ByVal userState As Object)
            If (Me.GetParaOperationCompleted Is Nothing) Then
                Me.GetParaOperationCompleted = AddressOf Me.OnGetParaOperationCompleted
            End If
            Me.InvokeAsync("GetPara", New Object(-1) {}, Me.GetParaOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetParaOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetParaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetParaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ResetPassword", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ResetPassword(ByVal un As String, ByVal pw As String, ByVal resetpw As String)
            Me.Invoke("ResetPassword", New Object() {un, pw, resetpw})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResetPasswordAsync(ByVal un As String, ByVal pw As String, ByVal resetpw As String)
            Me.ResetPasswordAsync(un, pw, resetpw, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ResetPasswordAsync(ByVal un As String, ByVal pw As String, ByVal resetpw As String, ByVal userState As Object)
            If (Me.ResetPasswordOperationCompleted Is Nothing) Then
                Me.ResetPasswordOperationCompleted = AddressOf Me.OnResetPasswordOperationCompleted
            End If
            Me.InvokeAsync("ResetPassword", New Object() {un, pw, resetpw}, Me.ResetPasswordOperationCompleted, userState)
        End Sub
        
        Private Sub OnResetPasswordOperationCompleted(ByVal arg As Object)
            If (Not (Me.ResetPasswordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ResetPasswordCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCargo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub GetCargo(ByVal fDate As Date, ByVal flightNum As String)
            Me.Invoke("GetCargo", New Object() {fDate, flightNum})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCargoAsync(ByVal fDate As Date, ByVal flightNum As String)
            Me.GetCargoAsync(fDate, flightNum, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCargoAsync(ByVal fDate As Date, ByVal flightNum As String, ByVal userState As Object)
            If (Me.GetCargoOperationCompleted Is Nothing) Then
                Me.GetCargoOperationCompleted = AddressOf Me.OnGetCargoOperationCompleted
            End If
            Me.InvokeAsync("GetCargo", New Object() {fDate, flightNum}, Me.GetCargoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCargoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCargoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCargoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCargoTotal", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub GetCargoTotal(ByVal date1 As Date, ByVal date2 As Date)
            Me.Invoke("GetCargoTotal", New Object() {date1, date2})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCargoTotalAsync(ByVal date1 As Date, ByVal date2 As Date)
            Me.GetCargoTotalAsync(date1, date2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCargoTotalAsync(ByVal date1 As Date, ByVal date2 As Date, ByVal userState As Object)
            If (Me.GetCargoTotalOperationCompleted Is Nothing) Then
                Me.GetCargoTotalOperationCompleted = AddressOf Me.OnGetCargoTotalOperationCompleted
            End If
            Me.InvokeAsync("GetCargoTotal", New Object() {date1, date2}, Me.GetCargoTotalOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCargoTotalOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCargoTotalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCargoTotalCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub GetFlightDynCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub QueryFlightDynCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub GetFlightViewDynCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub GetFlightSecurityDataCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub UpdateSecurityDataTimeCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub UpdateSecurityDataCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub SignCheckedCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub senderMessageBytopicCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub GetUserCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub GetParaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ResetPasswordCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub GetCargoCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub GetCargoTotalCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
End Namespace
